<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[Spring Cloud学习-服务注册与发现]]></title>
      <url>/2017/11/04/springcloud/Spring%20Cloud%E5%AD%A6%E4%B9%A0-%E6%90%AD%E5%BB%BA%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83/</url>
      <content type="html"><![CDATA[<h1 id="Spring-Cloud简介"><a href="#Spring-Cloud简介" class="headerlink" title="Spring Cloud简介"></a>Spring Cloud简介</h1><p><strong>spring cloud 为开发人员提供了快速构建分布式系统的一些工具</strong>，包括配置管理、服务发现、断路器、路由、微代理、事件总线、全局锁、决策竞选、分布式会话等等。</p>
<h1 id="创建服务注册中心"><a href="#创建服务注册中心" class="headerlink" title="创建服务注册中心"></a>创建服务注册中心</h1><p>这里我们需要选用Spring Cloud Netflix组件中的<code>Eureka</code></p>
<h2 id="创建一个spring-boot工程"><a href="#创建一个spring-boot工程" class="headerlink" title="创建一个spring boot工程"></a>创建一个spring boot工程</h2><p>选取<code>Eureka Server</code>,如下图</p>
<p><img src="http://oxrk6nknk.bkt.clouddn.com/eureka-server.jpg" alt="eureka-server"></p>
<p>创建好后，<code>pom.xml</code>中的主要依赖如下：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-eureka-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="启用服务注册中心"><a href="#启用服务注册中心" class="headerlink" title="启用服务注册中心"></a>启用服务注册中心</h2><p>在spring boot应用主类中添加<code>@EnableEurekaServer</code>即可</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@SpringBootApplication</span></div><div class="line"><span class="meta">@EnableEurekaServer</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EurekaServerApplication</span> </span>&#123;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">		SpringApplication.run(EurekaServerApplication.class, args);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="配置服务注册中心"><a href="#配置服务注册中心" class="headerlink" title="配置服务注册中心"></a>配置服务注册中心</h2><p>eureka是一个高可用的组件，<strong>它没有后端缓存</strong>，每一个实例注册之后需要向注册中心发送心跳（在内存中完成），在默认情况下erureka server也是一个eureka client ,它会将自己当成客户端去注册自己，所以我们需要禁用它的客户端注册行为。配置如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">spring.application.name=eureka-server</div><div class="line">server.port=1001</div><div class="line">eureka.client.fetch-registry=false</div><div class="line">eureka.client.register-with-eureka=false</div><div class="line">eureka.client.service-url.defaultZone=http://localhost:$&#123;server.port&#125;/eureka</div></pre></td></tr></table></figure>
<p>通过 <code>eureka.client.registerWithEureka：false</code>和<code>fetchRegistry：false</code>来表明自己是一个eureka server.</p>
<h2 id="启动服务注册中心"><a href="#启动服务注册中心" class="headerlink" title="启动服务注册中心"></a>启动服务注册中心</h2><p>启动工程后，访问<code>http://localhost:1001/</code>，我们可以看到如下图：</p>
<p><img src="http://oxrk6nknk.bkt.clouddn.com/eureka-server-broswer.jpg" alt="服务注册中心"><br>可以看到下面的页面，其中还没有发现任何服务，因为我们还没有在注册中心注册服务。<br>下面我们开始创建服务提供者</p>
<h1 id="创建服务提供者"><a href="#创建服务提供者" class="headerlink" title="创建服务提供者"></a>创建服务提供者</h1><p>当client向server注册时，<strong>它会提供一些元数据，例如主机和端口，URL，主页等</strong>。Eureka server 从每个client实例接收心跳消息。 <strong>如果心跳超时，则通常将该实例从注册server中删除</strong>。</p>
<h2 id="创建一个spring-boot工程-1"><a href="#创建一个spring-boot工程-1" class="headerlink" title="创建一个spring boot工程"></a>创建一个spring boot工程</h2><p>选取<code>Eureka Discovery</code>，如图：</p>
<p><img src="http://oxrk6nknk.bkt.clouddn.com/service-hi.jpg" alt="service-hi"></p>
<p>创建好后，<code>pom.xml</code>中的主要依赖如下：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-eureka<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="向服务注册中心注册"><a href="#向服务注册中心注册" class="headerlink" title="向服务注册中心注册"></a>向服务注册中心注册</h2><p>在spring boot主类上面添加注解@EnableEurekaClient，表明自己是一个eurekaclient，向服务注册中心注册自己。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@SpringBootApplication</span></div><div class="line"><span class="meta">@EnableEurekaClient</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServiceHiApplication</span> </span>&#123;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">		SpringApplication.run(ServiceHiApplication.class, args);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="配置文件修改"><a href="#配置文件修改" class="headerlink" title="配置文件修改"></a>配置文件修改</h2><p>配置注册中心地址，向指定注册中心注册自己<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">spring.application.name=service-hi</div><div class="line">server.port=$&#123;random.int[1000,1100]&#125;</div><div class="line">eureka.client.service-url.defaultZone=http://localhost:1001/eureka/</div></pre></td></tr></table></figure></p>
<p><code>${random.int[1000,1100]}</code>随机端口生成，范围在1000-1100，我们启动多个服务时候可以不用修改端口号，再启动。<br><strong><code>注意</code></strong>:<code>http://localhost:1001/eureka/</code>，中的<code>eureka</code>是固定的，不能修改。</p>
<h2 id="启动应用"><a href="#启动应用" class="headerlink" title="启动应用"></a>启动应用</h2><p>浏览访问<code>http://localhost:1001/</code>，效果如下图：<br><img src="http://oxrk6nknk.bkt.clouddn.com/eureka-server-emergency.jpg" alt="eureka-server"><br>我们可以看到刚刚创建的service-hi，这个服务已经被注册到这个服务当中了，但是我们也看到了上面有警告信息，该警告是触发了Eureka Server的自我保护机制，可以使用<code>eureka.server.enable-self-preservation=false</code>来关闭eureka server保护机制，以确保注册中心可以将不可用的实例正确剔除。<br><code>eureka server自我保护机制</code>:Eureka Server在运行期间，会统计心跳失败的比例在15分钟之内是否低于85%,Eureka Server会将当前实例注册信息保护起来，让这些实例不会过期，尽可能保护这些祖册信息。但是，在这段保护期间内实例若出现问题，那么客户端很容易拿到实际已经不存在的服务实例，会出现条用失败的情况，所以客户端必须要有容错机制，比如使用请求重试、断路器等机制。</p>
<blockquote>
<p>参考文档<br><a href="http://blog.csdn.net/forezp/article/details/69696915" target="_blank" rel="external">史上最简单的 SpringCloud 教程 | 第一篇： 服务的注册与发现（Eureka）</a><br>      <a href="http://blog.didispace.com/springcloud1/" target="_blank" rel="external">Spring Cloud构建微服务架构（一）服务注册与发现</a><br><br>      Spring Cloud微服务实战 </p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> spring cloud </category>
            
        </categories>
        
        
        <tags>
            
            <tag> eureka </tag>
            
            <tag> spring cloud netflix </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[关于Dalston.SR3版本的spring cloud，用feign客户端调用服务hystrix不能生效的问题]]></title>
      <url>/2017/10/13/springcloud/%E5%85%B3%E4%BA%8EDalston.SR3%E7%89%88%E6%9C%AC%E7%9A%84spring%20cloud%EF%BC%8C%E7%94%A8feign%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%B0%83%E7%94%A8%E6%9C%8D%E5%8A%A1hystrix%E4%B8%8D%E8%83%BD%E7%94%9F%E6%95%88%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<p>这两天公司让学习spring cloud,我在项目中用的springcloud版本是Dalston.SR3版本。当我在学习用feign客户端做断路器的时候，发现feign客户端并没有降级去调用回调类，而抛出这样的错误。<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">com.netflix.client.ClientException: Load balancer does not have available server for client: hello-service</div></pre></td></tr></table></figure></p>
<p>原因是这个版本的spring cloud是默认关闭Hystrix的断路器功能，解决办法：</p>
<ul>
<li>如果你的配置文件用的是yml文件，在文件加如下配置：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">feign:</div><div class="line">  hystrix:</div><div class="line">    enabled: true</div></pre></td></tr></table></figure>
<ul>
<li>如果你的配置文件用的是properties文件，在文件加如下配置：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">feign.hystrix.enabled=true</div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> spring cloud </category>
            
        </categories>
        
        
        <tags>
            
            <tag> spring cloud </tag>
            
            <tag> dalston sr3 </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
